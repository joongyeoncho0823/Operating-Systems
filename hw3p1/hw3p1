## Problem 1
a)
z is stored in bss region since it is uninitialized
i is stored in data region since it is initialized
ws is in the stack region since it is a non-static function variable
f1 is stored in the stack region since it is a function
b) 
10
11
11
12
Since i is a static variable, initialization happens once at compile time and is allocated in the data region. The first call (which prints 10) is from the parent process, then the next two 11s are from either the parent or child process (in no particular order because they are running simultaneously), then 12 from the child process.
c) The program output is not deterministic because the parent and child processes are running simultaneously with no order in particular. The output is the same each run because the parent process started first and since the child process has the same computational complexity as the parent process, but it is possible that the child process may call its second f1() call before the parent process makes its second f1() call, which would output 10, 11, 12, 11.
d)  255, which is the initial value, -1, right-shifted 8 bits. In the two's complement implementation of negative numbers, the positive bits are 0, and the negative bits are 1. So the 1s are right shifted 8 bits, which results in 255, but this is just -1 since the value of ws did not change.